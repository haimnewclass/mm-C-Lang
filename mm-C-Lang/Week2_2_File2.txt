As an object-oriented language, 
C# supports the concepts of encapsulation, 
inheritance, and polymorphism. 
A class may inherit directly from one parent class, and it may implement any number of interfaces. 
Methods that override virtual methods in a parent class require the override keyword as a way to avoid accidental redefinition. 
In C#, a struct is like a lightweight class; it's a stack-allocated type that can implement interfaces but doesn't support inheritance. 
C# provides record class and record struct types, which are types whose purpose is primarily storing data values.